{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/command-line.schema.json",
  "commands": [
    {
      "commandKind": "bulk",
      "name": "test",
      "summary": "Runs tests for all projects",
      "description": "",
      "enableParallelism": true,
      "incremental": true,
      "watchForChanges": false,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "safeForSimultaneousRushProcesses": false,
      "allowWarningsInSuccessfulBuild": false
    },
    {
      "commandKind": "bulk",
      "name": "lint",
      "summary": "Runs lint for all projects",
      "description": "",
      "enableParallelism": true,
      "incremental": true,
      "watchForChanges": false,
      "ignoreDependencyOrder": true,
      "ignoreMissingScript": true,
      "safeForSimultaneousRushProcesses": false,
      "allowWarningsInSuccessfulBuild": false
    },
    {
      "commandKind": "bulk",
      "name": "build:watch",
      "summary": "Watches for changes and reruns builds without cleaning",
      "description": "",
      "enableParallelism": true,
      "incremental": true,
      "watchForChanges": true,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "safeForSimultaneousRushProcesses": true,
      "allowWarningsInSuccessfulBuild": false
    },
    {
      "commandKind": "bulk",
      "name": "test:watch",
      "summary": "Watches for changes and reruns tests without cleaning",
      "description": "",
      "enableParallelism": true,
      "incremental": true,
      "watchForChanges": true,
      "ignoreDependencyOrder": false,
      "ignoreMissingScript": false,
      "safeForSimultaneousRushProcesses": true,
      "allowWarningsInSuccessfulBuild": false
    },
    {
      "commandKind": "bulk",
      "name": "clean",
      "summary": "Cleans each package's output folders and files",
      "description": "",
      "enableParallelism": true,
      "incremental": false,
      "watchForChanges": false,
      "ignoreDependencyOrder": true,
      "ignoreMissingScript": false,
      "safeForSimultaneousRushProcesses": true,
      "allowWarningsInSuccessfulBuild": false
    },
    // // this currently isn't functional due to rush not giving output until command is over
    // {
    //   "commandKind": "bulk",
    //   "name": "start",
    //   "summary": "Starts a package's tests in watch mode and potentially a webpack server",
    //   "description": "",
    //   "enableParallelism": true,
    //   "incremental": false,
    //   "watchForChanges": false,
    //   "ignoreDependencyOrder": true,
    //   "ignoreMissingScript": false,
    //   "safeForSimultaneousRushProcesses": true,
    //   "allowWarningsInSuccessfulBuild": true
    // },
    {
      "name": "prettier",
      "commandKind": "global",
      "summary": "Used by the pre-commit Git hook. This command invokes Prettier to reformat staged changes.",
      "autoinstallerName": "rush-prettier",
      "safeForSimultaneousRushProcesses": true,

      // This will invoke common/autoinstallers/rush-prettier/node_modules/.bin/pretty-quick
      "shellCommand": "pretty-quick"
    },
    {
      "name": "set-project-references",
      "commandKind": "global",
      "summary": "Detects workspace dependencies and automatically adds them as project references in tsconfig.json",
      "autoinstallerName": "rush-set-project-references",
      "safeForSimultaneousRushProcesses": true,

      // This will invoke common/autoinstallers/rush-prettier/node_modules/.bin/pretty-quick
      "shellCommand": "cd common/temp && set-project-references -s && rush prettier"
    }
  ],

  "parameters": [
    {
      "parameterKind": "flag",
      "longName": "--staged",
      "description": "For the prettier command runs on only staged instead of all changed files",
      "associatedCommands": ["prettier"]
    },
    {
      "parameterKind": "flag",
      "longName": "--no-build",
      "description": "Run tests without running a build",
      "associatedCommands": ["test"]
    },
    {
      "parameterKind": "flag",
      "longName": "--no-op",
      "description": "Run test scripts for possible tracking reasons without running build or test",
      "associatedCommands": ["test"]
    },
    {
      "parameterKind": "flag",
      "longName": "--track-deployable",
      "description": "Track that the command should have run and write to common/temp/ciqWorkflowState.json",
      "associatedCommands": ["test"]
    },
    {
      "parameterKind": "flag",
      "longName": "--update-snapshots",
      "shortName": "-u",
      "description": "Updates snapshots while running tests.",
      "associatedCommands": ["test"]
    }

    // // commented out until / if start command above works
    // {
    //   "parameterKind": "string",
    //   "longName": "--api-stage",
    //   "description": "Which stage to point the api requests to",
    //   "associatedCommands": ["start"],
    //   "argumentName": "CIQ_API_STAGE",
    //   "required": false
    // }
    // {
    //   "parameterKind": "string",
    //   "longName": "--my-string",
    //   "description": "A custom string parameter for the \"my-global-command\" custom command",
    //   "associatedCommands": ["my-global-command"],
    //   "argumentName": "SOME_TEXT",
    //   "required": false
    // },
    // {
    //   "parameterKind": "choice",
    //   "longName": "--my-choice",
    //   "description": "A custom choice parameter for the \"my-global-command\" custom command",
    //   "associatedCommands": ["my-global-command"],
    //   "required": false,
    //   "defaultValue": "vanilla",
    //   "alternatives": [
    //     {
    //       "name": "vanilla",
    //       "description": "Use the vanilla flavor (the default)"
    //     },
    //     {
    //       "name": "chocolate",
    //       "description": "Use the chocolate flavor"
    //     },
    //     {
    //       "name": "strawberry",
    //       "description": "Use the strawberry flavor"
    //     }
    //   ]
    // }
  ]
}
